{
    "openapi": "3.0.0",
    "info": {
      "title": "Complex Example API",
      "description": "A more complex example API to demonstrate OpenAPI capabilities.",
      "version": "1.1.0"
    },
    "servers": [
      {
        "url": "https://api.example.com",
        "description": "Production Server"
      },
      {
        "url": "https://staging-api.example.com",
        "description": "Staging Server"
      }
    ],
    "paths": {
      "/api/v2/users": {
        "get": {
          "summary": "Get list of users",
          "description": "Fetch a list of all users in the system.",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Page number for pagination",
              "required": false,
              "schema": {
                "type": "integer",
                "example": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of users per page",
              "required": false,
              "schema": {
                "type": "integer",
                "example": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A list of users.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "post": {
          "summary": "Create a new user",
          "description": "Creates a new user in the system.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewUser"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/api/v2/users/{userId}": {
        "get": {
          "summary": "Get user by ID",
          "description": "Fetch a single user by their unique ID.",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "description": "ID of the user to fetch",
              "required": true,
              "schema": {
                "type": "string",
                "example": "123"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "put": {
          "summary": "Update user by ID",
          "description": "Updates the details of an existing user.",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "description": "ID of the user to update",
              "required": true,
              "schema": {
                "type": "string",
                "example": "123"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUser"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            },
            "400": {
              "description": "Invalid input"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "delete": {
          "summary": "Delete user by ID",
          "description": "Deletes a user from the system.",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "description": "ID of the user to delete",
              "required": true,
              "schema": {
                "type": "string",
                "example": "123"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted successfully"
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/api/v2/auth/login": {
        "post": {
          "summary": "Login user",
          "description": "Authenticates a user and returns a token.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Authentication successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid credentials"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "123"
            },
            "username": {
              "type": "string",
              "example": "johndoe"
            },
            "email": {
              "type": "string",
              "example": "johndoe@example.com"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "example": "2024-09-16T14:20:00Z"
            }
          }
        },
        "NewUser": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "johndoe"
            },
            "email": {
              "type": "string",
              "example": "johndoe@example.com"
            },
            "password": {
              "type": "string",
              "example": "password123"
            }
          },
          "required": ["username", "email", "password"]
        },
        "UpdateUser": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "example": "newemail@example.com"
            },
            "password": {
              "type": "string",
              "example": "newpassword123"
            }
          }
        },
        "LoginRequest": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "johndoe"
            },
            "password": {
              "type": "string",
              "example": "password123"
            }
          },
          "required": ["username", "password"]
        },
        "LoginResponse": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            },
            "expiresIn": {
              "type": "integer",
              "example": 3600
            }
          }
        }
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
  